generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  username   String
  email      String     @unique
  password   String
  profileImg String?
  role       UserRole   @default(CUSTOMER)
  isDelated  Boolean    @default(false)
  status     UserStatus @default(ACTIVE)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  shop       Shop?
  cart       Cart?

  @@map("users")
}

model Shop {
  id          String     @id @default(uuid())
  vendorId    String     @unique
  vendor      User       @relation(fields: [vendorId], references: [id])
  name        String
  logo        String
  description String
  status      ShopStatus @default(ACTIVE)
  isDelated   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Products    Products[]
  cart        Cart?

  @@map("shop")
}

model Categories {
  id        String     @id @default(uuid())
  name      String     @unique
  isDelated Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  products  Products[]

  @@map("categories")
}

model Products {
  id             String     @id @default(uuid())
  shopId         String
  shop           Shop       @relation(fields: [shopId], references: [id])
  categoryId     String
  category       Categories @relation(fields: [categoryId], references: [id])
  name           String
  price          Decimal
  description    String
  inventoryCount Int
  discount       Decimal?
  productImg     String?
  isDelated      Boolean    @default(false)

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItem  CartItem[]

  @@map("products")
}

model Cart {
  id         String  @id @default(uuid())
  customerId String  @unique
  user       User    @relation(fields: [customerId], references: [id])
  vendorId   String? @unique
  vendor     Shop?   @relation(fields: [vendorId], references: [id])

  isDelated Boolean @default(false)

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItem  CartItem[]

  @@map("cart")
}

model CartItem {
  id     String @id @default(uuid())
  cartId String
  cart   Cart   @relation(fields: [cartId], references: [id])

  productId String
  product   Products @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
  @@map("cartItem")
}

enum UserRole {
  ADMIN
  VENDOR
  CUSTOMER
}

enum UserStatus {
  ACTIVE
  BLOCKED
  SUSPENDED
}

enum ShopStatus {
  BLOCKED
  ACTIVE
}
